{"version":3,"sources":["mock-data.js","api.js","Event.js","EventList.js","CitySearch.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["mockData","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","location","search","get","code","axios","results","authUrl","data","href","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","start","startsWith","done","token","removeQuery","url","locations","extractLocations","events","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","map","event","Set","Event","this","props","summary","htmlLink","description","Component","EventList","console","log","className","id","CitySearch","state","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","filter","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","onClick","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bd9ee4bd.chunk.js","sourcesContent":["const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    }\n  },\n\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    }\n  },\n\n]\n\nexport { mockData };\n","import { mockData } from \"./mock-data\";\nimport NProgress from 'nprogress';\nimport axios from 'axios';\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://uilsp4bwm3.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://uilsp4bwm3.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    \"https://uilsp4bwm3.execute-api.eu-central-1.amazonaws.com/dev/api/token\" + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\n","import React, { Component } from \"react\";\n\nclass Event extends Component {\n  render() {\n    const {\n      summary,\n      location,\n      start,\n      htmlLink,\n      description,\n    } = this.props.event;\n\n    return (\n      <div>\n        <h2>{summary}</h2>\n      </div>\n    );\n  }\n}\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    console.log(events);\n    return (\n      <ul className=\"eventList\">\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\n\n\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { getEvents, extractLocations } from './api';\nimport './App.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\n\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events, locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}